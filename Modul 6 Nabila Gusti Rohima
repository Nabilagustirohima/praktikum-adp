Jadwal_Penerbangan = [
    ["seblak", "bakso", "09:00", "10:00"],
    ["bakso", "somay", "11:00", "12:30"],
    ["somay", "batagor", "13:00", "14:00"],
    ["seblak", "bakso", "21:00", "21:45"],
    ["seblak", "somay", "10:00", "12:00"],
    ["seblak", "batagor", "10:00", "12:30"],
    ["bakso", "batagor", "17:00", "19:00"],
    ["bakso", "somay", "03:00", "04:00"]
]

def tampilkan_jadwal(jadwal):
    print("Jadwal Penerbangan:")
    print("{:10} {:10} {:10} {:10}".format("Kota Asal", "Kota Tujuan", "Keberangkatan", "Kedatangan"))
    for penerbangan in jadwal:
        print("{:10} {:10} {:10} {:10}".format(*penerbangan))

def cari_rute_tercepat(jadwal, Kota_Asal, Kota_Tujuan):
    rute_tercepat = None
    waktu_tercepat = float('inf')
    for penerbangan in jadwal:
        if penerbangan[0] == Kota_Asal and penerbangan[1] == Kota_Tujuan:
            waktu_tempuh = int(penerbangan[3][:2]) * 60 + int(penerbangan[3][3:]) - (int(penerbangan[2][:2]) * 60 + int(penerbangan[2][3:]))
            if waktu_tempuh < waktu_tercepat:
                rute_tercepat = penerbangan
                waktu_tercepat = waktu_tempuh
    return rute_tercepat

tampilkan_jadwal(Jadwal_Penerbangan)

Kota_Asal = input("Masukkan kota asal: ")
Kota_Tujuan = input("Masukkan kota tujuan: ")
Rute = cari_rute_tercepat(Jadwal_Penerbangan, Kota_Asal, Kota_Tujuan)
if Rute:
    print("\nRute tercepat dari {} ke {}".format(Kota_Asal, Kota_Tujuan))
    print("Kota Asal:", Rute[0])
    print("Kota Tujuan:", Rute[1])
    print("Keberangkatan:", Rute[2])
    print("Kedatangan:", Rute[3])
else:
    print("Tidak ada rute langsung antara {} ke {}.".format(Kota_Asal, Kota_Tujuan))
